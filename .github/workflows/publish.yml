name: create-release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: build
    runs-on: macos-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - name: cache
        uses: actions/cache@v3
        id: cachepackages
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 📦 Install dependencies
        if: steps.cachepackages.outputs.cache-hit != 'true'
        run: npm install --force

      - name: 🚀 Build actions
        run: npm run all

  test: # make sure the action works on a clean machine without building
    name: test
    runs-on: macos-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - uses: ./
        with:
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          cos_bucket: 'samu-1253579870'
          cos_region: 'ap-nanjing'
          local_path: 'src/common.ts'
          remote_path: 'action-test/tencent-cos-upload/'
          clean: true

  publish:
    needs: ['test', 'build']
    name: publish
    runs-on: macos-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - name: 🚀 Create Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: 💬 Comment in Slack
        uses: slackapi/slack-github-action@v1.17.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          channel-id: C03DY3QTBTQ
          slack-message: '【发布】tencent-cos-action: ${{ github.ref_name }} https://github.com/Lauweal/tencent-cos-action/releases'

  